{"version":3,"sources":["components/Notification.js","components/Footer.js","components/Note.js","components/LoginForm.js","components/NoteForm.js","services/notes.js","services/login.js","App.js","index.js"],"names":["Notification","message","className","Footer","style","color","fontStyle","fontSize","Note","note","toggleImportance","label","important","content","type","onClick","LoginForm","handleLogin","username","password","setUsername","setPassword","onSubmit","value","name","onChange","target","NoteForm","addNote","newNote","handleNoteChange","token","getAll","request","axios","get","nonExisting","id","date","then","response","data","concat","create","newObject","a","config","headers","Authorization","post","update","put","setToken","newToken","login","credentials","App","useState","notes","setNotes","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","user","setUser","useEffect","noteService","initialNotes","notesToShow","filter","event","preventDefault","loginService","userLogging","window","localStorage","setItem","JSON","stringify","console","log","setTimeout","noteObject","Date","toISOString","Math","random","returnedNote","map","key","find","n","changedNote","catch","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"0OAUeA,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAGF,yBAAKC,UAAU,SAASD,ICYlBE,EAjBA,WAOb,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,uGCESC,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACE,6BACE,wBAAIV,UAAU,QAAQO,EAAKI,SAC3B,4BAAQC,KAAK,SAASC,QAASL,GAC5BC,KCwBMK,EA9BG,SAAC,GAAD,IAChBC,EADgB,EAChBA,YACAC,EAFgB,EAEhBA,SACAC,EAHgB,EAGhBA,SACAC,EAJgB,EAIhBA,YACAC,EALgB,EAKhBA,YALgB,OAOhB,0BAAMC,SAAUL,GACd,wCAEE,2BACEH,KAAK,OACLS,MAAOL,EACPM,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBN,EAAYM,EAAOH,WAGjD,wCAEE,2BACET,KAAK,WACLS,MAAOJ,EACPK,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBL,EAAYK,EAAOH,WAGjD,4BAAQT,KAAK,UAAb,WCnBWa,EAPE,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,QAASC,EAArB,EAAqBA,iBAArB,OACf,0BAAMR,SAAUM,GACd,2BAAOL,MAAOM,EAASJ,SAAUK,IACjC,4BAAQhB,KAAK,UAAb,U,gBCDAiB,EAAQ,KAgCG,GAAEC,OA1BF,WACb,IAAMC,EAAUC,IAAMC,IATR,cAURC,EAAc,CAClBC,GAAI,IACJxB,QAAS,mCACTyB,KAAM,2BACN1B,WAAW,GAEb,OAAOqB,EAAQM,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKC,OAAON,OAkBhCO,OAfb,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACPC,EAAS,CACbC,QAAS,CAAEC,cAAejB,IAFf,SAKUG,IAAMe,KAxBf,aAwB6BL,EAAWE,GALzC,cAKPN,EALO,yBAONA,EAASC,MAPH,2CAAH,sDAeqBS,OALlB,SAACb,EAAIO,GAElB,OADgBV,IAAMiB,IAAN,UA9BF,aA8BE,YAAwBd,GAAMO,GAC/BL,MAAK,SAACC,GAAD,OAAcA,EAASC,SAGJW,SA9BxB,SAACC,GAChBtB,EAAK,iBAAasB,KCEL,GAAEC,MALN,uCAAG,WAAOC,GAAP,eAAAV,EAAA,sEACWX,IAAMe,KAHf,aAG6BM,GAD/B,cACNf,EADM,yBAELA,EAASC,MAFJ,2CAAH,uDC+HIe,EA1HH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,cAFvB,mBAET5B,EAFS,KAEA+B,EAFA,OAGcH,oBAAS,GAHvB,mBAGTI,EAHS,KAGAC,EAHA,OAIwBL,mBAAS,MAJjC,mBAITM,EAJS,KAIKC,EAJL,OAKgBP,mBAAS,IALzB,mBAKTvC,EALS,KAKCE,EALD,OAMgBqC,mBAAS,IANzB,mBAMTtC,EANS,KAMCE,EAND,OAOQoC,mBAAS,MAPjB,mBAOTQ,EAPS,KAOHC,EAPG,KAShBC,qBAAU,WACRC,EAAYpC,SAASO,MAAK,SAAC8B,GAAD,OAAkBV,EAASU,QACpD,IAEH,IAsCMC,EAAcT,EAAUH,EAAQA,EAAMa,QAAO,SAAC9D,GAAD,OAAUA,EAAKG,aAE5DK,EAAW,uCAAG,WAAOuD,GAAP,eAAA3B,EAAA,6DAClB2B,EAAMC,iBADY,kBAGUC,EAAapB,MAAM,CAC3CpC,WACAC,aALc,OAGVwD,EAHU,OAQhBC,OAAOC,aAAaC,QAClB,oBACAC,KAAKC,UAAUL,IAGjBP,EAAYhB,SAASuB,EAAY5C,OACjCmC,EAAQS,GACRvD,EAAY,IACZC,EAAY,IACZ4D,QAAQC,IAAI,kBAAmBhE,EAAUC,GAjBzB,kDAmBhB6C,EAAgB,qBAChBmB,YAAW,WACTnB,EAAgB,QACf,KAtBa,0DAAH,sDA0BjB,OACE,6BACE,qCACA,kBAAC,EAAD,CAAc/D,QAAS8D,IAEb,OAATE,EACC,kBAAC,EAAD,CACEhD,YAAaA,EACbC,SAAUA,EACVC,SAAUA,EACVC,YAAaA,EACbC,YAAaA,IAGf,6BACE,2BAAI4C,EAAKzC,KAAT,cACA,kBAAC,EAAD,CACEI,QAnFM,SAAC4C,GACfA,EAAMC,iBACN,IAAMW,EAAa,CACjBvE,QAASgB,EACTS,MAAM,IAAI+C,MAAOC,cACjB1E,UAAW2E,KAAKC,SAAW,IAG7BpB,EAAYzB,OAAOyC,GAAY7C,MAAK,SAACkD,GACnC9B,EAASD,EAAMhB,OAAO+C,IACtB7B,EAAW,QA0EL/B,QAASA,EACTC,iBAnDe,SAAC0C,GACxBZ,EAAWY,EAAM9C,OAAOH,WAuDtB,6BACE,4BAAQT,KAAK,SAASC,QAAS,kBAAM+C,GAAYD,KAAjD,QACQA,EAAU,YAAc,QAGlC,4BACGS,EAAYoB,KAAI,SAACjF,GAAD,OACf,kBAAC,EAAD,CACEkF,IAAKlF,EAAK4B,GACV5B,KAAMA,EACNC,iBAAkB,kBAtFD,SAAC2B,GAC1B,IAAM5B,EAAOiD,EAAMkC,MAAK,SAACC,GAAD,OAAOA,EAAExD,KAAOA,KAClCyD,EAAW,eAAQrF,EAAR,CAAcG,WAAYH,EAAKG,YAEhDwD,EACGlB,OAAOb,EAAIyD,GACXvD,MAAK,SAACkD,GAAD,OACJ9B,EAASD,EAAMgC,KAAI,SAACG,GAAD,OAAQA,EAAExD,KAAOA,EAAKwD,EAAIJ,SAE9CM,OAAM,WACL/B,EAAgB,kBAAD,OACK3B,EADL,yCAGf8C,YAAW,WACTnB,EAAgB,QACf,KACHL,EAASD,EAAMa,QAAO,SAACsB,GAAD,OAAOA,EAAExD,KAAOA,SAsEV2D,CAAmBvF,EAAK4B,WAItD,kBAAC,EAAD,Q,MCzHN4D,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1b20fa79.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: \"green\",\r\n    fontStyle: \"italic\",\r\n    fontSize: 16,\r\n  };\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>\r\n        Note app, Department of Computer Science, University of Helsinki 2020\r\n      </em>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n  return (\n    <div>\n      <li className=\"note\">{note.content}</li>\n      <button type=\"button\" onClick={toggleImportance}>\n        {label}\n      </button>\n    </div>\n  );\n};\n\nexport default Note;\n","import React from \"react\";\n\nconst LoginForm = ({\n  handleLogin,\n  username,\n  password,\n  setUsername,\n  setPassword,\n}) => (\n  <form onSubmit={handleLogin}>\n    <div>\n      username\n      <input\n        type=\"text\"\n        value={username}\n        name=\"Username\"\n        onChange={({ target }) => setUsername(target.value)}\n      />\n    </div>\n    <div>\n      password\n      <input\n        type=\"password\"\n        value={password}\n        name=\"Password\"\n        onChange={({ target }) => setPassword(target.value)}\n      />\n    </div>\n    <button type=\"submit\">login</button>\n  </form>\n);\n\nexport default LoginForm;\n","import React from \"react\";\n\nconst NoteForm = ({ addNote, newNote, handleNoteChange }) => (\n  <form onSubmit={addNote}>\n    <input value={newNote} onChange={handleNoteChange} />\n    <button type=\"submit\">save</button>\n  </form>\n);\n\nexport default NoteForm;\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/notes\";\n\nlet token = null;\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  const nonExisting = {\n    id: 10000,\n    content: \"This note is not saved to server\",\n    date: \"2019-05-30T17:30:31.098Z\",\n    important: true,\n  };\n  return request.then((response) => response.data.concat(nonExisting));\n};\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n\n  const response = await axios.post(baseUrl, newObject, config);\n\n  return response.data;\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, create, update, setToken };\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/login\";\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nexport default { login };\n","import React, { useState, useEffect } from \"react\";\nimport Notification from \"./components/Notification\";\nimport Footer from \"./components/Footer\";\nimport Note from \"./components/Note\";\nimport LoginForm from \"./components/LoginForm\";\nimport NoteForm from \"./components/NoteForm\";\nimport noteService from \"./services/notes\";\nimport loginService from \"./services/login\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"a new note\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => setNotes(initialNotes));\n  }, []);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) =>\n        setNotes(notes.map((n) => (n.id !== id ? n : returnedNote)))\n      )\n      .catch(() => {\n        setErrorMessage(\n          `The note of id ${id} was already deleted from the server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    try {\n      const userLogging = await loginService.login({\n        username,\n        password,\n      });\n\n      window.localStorage.setItem(\n        \"loggedNoteappUser\",\n        JSON.stringify(userLogging)\n      );\n\n      noteService.setToken(userLogging.token);\n      setUser(userLogging);\n      setUsername(\"\");\n      setPassword(\"\");\n      console.log(\"logging in with\", username, password);\n    } catch (exception) {\n      setErrorMessage(\"Wrong credentials\");\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n\n      {user === null ? (\n        <LoginForm\n          handleLogin={handleLogin}\n          username={username}\n          password={password}\n          setUsername={setUsername}\n          setPassword={setPassword}\n        />\n      ) : (\n        <div>\n          <p>{user.name} logged in</p>\n          <NoteForm\n            addNote={addNote}\n            newNote={newNote}\n            handleNoteChange={handleNoteChange}\n          />\n        </div>\n      )}\n\n      <div>\n        <button type=\"button\" onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}