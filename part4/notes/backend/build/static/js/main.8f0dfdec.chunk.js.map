{"version":3,"sources":["components/Notification.js","components/Footer.js","components/Note.js","services/notes.js","App.js","index.js"],"names":["Notification","message","className","Footer","style","color","fontStyle","fontSize","Note","note","toggleImportance","label","important","content","onClick","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"mNAUeA,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAGF,yBAAKC,UAAU,SAASD,ICYlBE,EAjBA,WAOb,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,uGCASC,EAVF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACE,6BACE,wBAAIV,UAAU,QAAQO,EAAKI,SAC3B,4BAAQC,QAASJ,GAAmBC,K,gBCkB3B,EArBA,WACb,IAAMI,EAAUC,IAAMC,IAHR,cAIRC,EAAc,CAClBC,GAAI,IACJN,QAAS,mCACTO,KAAM,2BACNR,WAAW,GAEb,OAAOG,EAAQM,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKC,OAAON,OAa1C,EAVA,SAACO,GAEd,OADgBT,IAAMU,KAdR,aAcsBD,GACrBJ,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQ9B,EALA,SAACJ,EAAIM,GAElB,OADgBT,IAAMW,IAAN,UAnBF,aAmBE,YAAwBR,GAAMM,GAC/BJ,MAAK,SAACC,GAAD,OAAcA,EAASC,SC6D9BK,EA7EH,SAACC,GAAW,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAESF,mBAAS,cAFlB,mBAEdG,EAFc,KAELC,EAFK,OAGSJ,oBAAS,GAHlB,mBAGdK,EAHc,KAGLC,EAHK,OAImBN,mBAAS,MAJ5B,mBAIdO,EAJc,KAIAC,EAJA,KAMrBC,qBAAU,WACRC,IAAqBnB,MAAK,SAACoB,GAAD,OAAkBT,EAASS,QACpD,IAEH,IAsCMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAAClC,GAAD,OAAUA,EAAKG,aAElE,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcX,QAASoC,IACvB,6BACE,4BAAQvB,QAAS,kBAAMsB,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGO,EAAYE,KAAI,SAACnC,GAAD,OACf,kBAAC,EAAD,CACEoC,IAAKpC,EAAKU,GACVV,KAAMA,EACNC,iBAAkB,kBAxCD,SAACS,GAC1B,IAAMV,EAAOsB,EAAMe,MAAK,SAACC,GAAD,OAAOA,EAAE5B,KAAOA,KAClC6B,EAAW,eAAQvC,EAAR,CAAcG,WAAYH,EAAKG,YAEhD4B,EACUrB,EAAI6B,GACX3B,MAAK,SAAC4B,GAAD,OACJjB,EAASD,EAAMa,KAAI,SAACnC,GAAD,OAAWA,EAAKU,KAAOA,EAAKV,EAAOwC,SAEvDC,OAAM,SAACC,GACNb,EAAgB,kBAAD,OACKnB,EADL,yCAGfiC,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAClC,GAAD,OAAUA,EAAKU,KAAOA,SAwBhBkC,CAAmB5C,EAAKU,WAItD,0BAAMmC,SA1DM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB5C,QAASoB,EACTb,MAAM,IAAIsC,MAAOC,cACjB/C,UAAWgD,KAAKC,SAAW,IAG7BrB,EAAmBiB,GAAYpC,MAAK,SAAC4B,GACnCjB,EAASD,EAAMP,OAAOyB,IACtBf,EAAW,SAiDT,2BAAO4B,MAAO7B,EAAS8B,SAzBJ,SAACR,GACxBrB,EAAWqB,EAAMS,OAAOF,UAyBpB,4BAAQG,KAAK,UAAb,SAEF,kBAAC,EAAD,Q,MCzENC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8f0dfdec.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: \"green\",\r\n    fontStyle: \"italic\",\r\n    fontSize: 16,\r\n  };\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>\r\n        Note app, Department of Computer Science, University of Helsinki 2020\r\n      </em>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important ? \"make not important\" : \"make important\";\r\n  return (\r\n    <div>\r\n      <li className=\"note\">{note.content}</li>\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/notes\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  const nonExisting = {\r\n    id: 10000,\r\n    content: \"This note is not saved to server\",\r\n    date: \"2019-05-30T17:30:31.098Z\",\r\n    important: true,\r\n  };\r\n  return request.then((response) => response.data.concat(nonExisting));\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, update };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Notification from \"./components/Notification\";\r\nimport Footer from \"./components/Footer\";\r\nimport Note from \"./components/Note\";\r\nimport noteService from \"./services/notes\";\r\n\r\nconst App = (props) => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState(\"a new note\");\r\n  const [showAll, setShowAll] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    noteService.getAll().then((initialNotes) => setNotes(initialNotes));\r\n  }, []);\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault();\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() < 0.5,\r\n    };\r\n\r\n    noteService.create(noteObject).then((returnedNote) => {\r\n      setNotes(notes.concat(returnedNote));\r\n      setNewNote(\"\");\r\n    });\r\n  };\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find((n) => n.id === id);\r\n    const changedNote = { ...note, important: !note.important };\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then((returnedNote) =>\r\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)))\r\n      )\r\n      .catch((error) => {\r\n        setErrorMessage(\r\n          `The note of id ${id} was already deleted from the server`\r\n        );\r\n        setTimeout(() => {\r\n          setErrorMessage(null);\r\n        }, 5000);\r\n        setNotes(notes.filter((note) => note.id !== id));\r\n      });\r\n  };\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value);\r\n  };\r\n\r\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? \"important\" : \"all\"}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map((note) => (\r\n          <Note\r\n            key={note.id}\r\n            note={note}\r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input value={newNote} onChange={handleNoteChange} />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}