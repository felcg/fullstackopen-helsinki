{"version":3,"sources":["components/Notification.js","components/Footer.js","components/Note.js","services/login.js","components/LoginForm.js","components/NoteForm.js","components/Toggable.js","services/notes.js","App.js","index.js"],"names":["Notification","message","className","Footer","style","color","fontStyle","fontSize","Note","note","toggleImportance","label","important","content","type","onClick","login","credentials","a","axios","post","response","data","LoginForm","logUser","useState","username","setUsername","password","setPassword","handleLogin","event","preventDefault","loginService","user","window","localStorage","setItem","JSON","stringify","onSubmit","value","name","onChange","target","NoteForm","createNote","newNote","setNewNote","Math","random","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","token","getAll","request","get","nonExisting","id","date","then","concat","create","newObject","config","headers","Authorization","update","put","setToken","newToken","App","notes","setNotes","showAll","setShowAll","errorMessage","setErrorMessage","setUser","useEffect","noteService","initialNotes","loggedUserJSON","getItem","parse","noteFormRef","createRef","addNote","noteObject","current","returnedNote","returnedUser","exception","setTimeout","notesToShow","filter","Toggable","clear","map","key","find","n","changedNote","catch","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa01e2af.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"error\">{message}</div>;\n};\n\nexport default Notification;\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: \"green\",\r\n    fontStyle: \"italic\",\r\n    fontSize: 16,\r\n  };\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>\r\n        Note app, Department of Computer Science, University of Helsinki 2020\r\n      </em>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n  return (\n    <div>\n      <li className=\"note\">{note.content}</li>\n      <button type=\"button\" onClick={toggleImportance}>\n        {label}\n      </button>\n    </div>\n  );\n};\n\nexport default Note;\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/login\";\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nexport default { login };\n","import React, { useState } from \"react\";\nimport loginService from \"../services/login\";\n\nconst LoginForm = ({ logUser }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    const user = await loginService.login({\n      username,\n      password,\n    });\n\n    window.localStorage.setItem(\"loggedNoteappUser\", JSON.stringify(user));\n\n    logUser(user);\n    setUsername(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n        <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password\n        <input\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\n\nconst NoteForm = ({ createNote }) => {\n  const [newNote, setNewNote] = useState(\"a new note\");\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const addNote = (event) => {\n    event.preventDefault();\n    createNote({\n      content: newNote,\n      important: Math.random() > 0.5,\n    });\n\n    setNewNote(\"\");\n  };\n\n  return (\n    <div>\n      <h2>Create a new note</h2>\n\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  );\n};\n\nexport default NoteForm;\n","import React, { useState, useImperativeHandle } from \"react\";\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false);\n\n  const hideWhenVisible = { display: visible ? \"none\" : \"\" };\n  const showWhenVisible = { display: visible ? \"\" : \"none\" };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility,\n    };\n  });\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  );\n});\n\nexport default Togglable;\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/notes\";\n\nlet token = null;\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  const nonExisting = {\n    id: 10000,\n    content: \"This note is not saved to server\",\n    date: \"2019-05-30T17:30:31.098Z\",\n    important: true,\n  };\n  return request.then((response) => response.data.concat(nonExisting));\n};\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n\n  const response = await axios.post(baseUrl, newObject, config);\n\n  return response.data;\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, create, update, setToken };\n","/* eslint-disable no-undef */\nimport React, { useState, useEffect } from \"react\";\nimport Notification from \"./components/Notification\";\nimport Footer from \"./components/Footer\";\nimport Note from \"./components/Note\";\nimport LoginForm from \"./components/LoginForm\";\nimport NoteForm from \"./components/NoteForm\";\nimport Toggable from \"./components/Toggable\";\nimport noteService from \"./services/notes\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => setNotes(initialNotes));\n  }, []);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem(\"loggedNoteappUser\");\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      noteService.setToken(user.token);\n    }\n  }, []);\n\n  const noteFormRef = React.createRef();\n\n  const addNote = async (noteObject) => {\n    noteFormRef.current.toggleVisibility();\n    const returnedNote = await noteService.create(noteObject);\n    setNotes(notes.concat(returnedNote));\n  };\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) =>\n        setNotes(notes.map((n) => (n.id !== id ? n : returnedNote)))\n      )\n      .catch(() => {\n        setErrorMessage(\n          `The note of id ${id} was already deleted from the server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  const handleLogin = async (returnedUser) => {\n    try {\n      noteService.setToken(returnedUser.token);\n      setUser(returnedUser);\n    } catch (exception) {\n      setErrorMessage(\"Wrong credentials\");\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n  };\n\n  const logout = (event) => {\n    event.preventDefault();\n    window.localStorage.clear();\n    setUser(null);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n\n      {user === null ? (\n        <Toggable buttonLabel=\"Login\">\n          <LoginForm logUser={handleLogin} />\n        </Toggable>\n      ) : (\n        <div>\n          <p>{user.name} logged in</p>\n          <button type=\"button\" onClick={logout}>\n            logout\n          </button>\n          <Toggable buttonLabel=\"A new note\" ref={noteFormRef}>\n            <NoteForm createNote={addNote} />\n          </Toggable>\n        </div>\n      )}\n\n      <div>\n        <button type=\"button\" onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}